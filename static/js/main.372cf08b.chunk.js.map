{"version":3,"sources":["../../src/common/useCanvasReset.ts","../../src/common/useStrokeApply.ts","../../src/common/useCanvasDraw.ts","components/swatches.js","components/sizes.js","components/footer.js","components/header.js","main.js","../../src/viewer/index.tsx","../../src/drawer/index.tsx","index.js"],"names":["useCanvasReset","ref","ctx","onReset","height","width","window","refContext","useStrokeApply","onApply","context","useCanvasDraw","onDraw","payload","Math","i","colors","Swatches","current","onChange","className","map","color","onClick","active","Swatch","handleClick","React","style","backgroundColor","aria-label","title","sizes","Sizes","size","Size","Footer","role","href","rel","Header","aria-hidden","xmlns","viewBox","d","App","setColor","strokeWidth","setStrokeWidth","setCtx","count","dirty","setDirty","handleApply","applyStroke","handleDraw","drawToCanvas","handleReset","reset","console","canvas","document","useRealtimeViewer","viewerRef","resetViewer","points","ratio","setRatio","mouseDown","setMouseDown","left","top","pageX","e","pageY","x","y","start","useRealtimeDrawer","drawerRef","resetDrawer","log","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.372cf08b.chunk.js","sourcesContent":["import * as React from 'react';\n\ninterface CanvasResetProps {\n  ref: React.RefObject<HTMLCanvasElement>;\n  ctx: CanvasRenderingContext2D | null;\n  onReset?: () => void;\n}\n\nexport const useCanvasReset = ({\n  ref,\n  ctx,\n  onReset,\n}: CanvasResetProps): (() => void) => {\n  const reset = React.useCallback(() => {\n    if (ctx && ref.current) {\n      if (onReset) {\n        onReset();\n      }\n\n      const { height, width } = ctx.canvas.getBoundingClientRect();\n\n      ctx.clearRect(\n        0,\n        0,\n        width * window.devicePixelRatio,\n        height * window.devicePixelRatio\n      );\n\n      const refContext = ref.current.getContext('2d');\n      if (refContext) {\n        refContext.clearRect(\n          0,\n          0,\n          width * window.devicePixelRatio,\n          height * window.devicePixelRatio\n        );\n      }\n    }\n  }, [ctx, ref, onReset]);\n\n  return reset;\n};\n","import * as React from 'react';\n\ninterface StrokeApplyProps {\n  ref: React.RefObject<HTMLCanvasElement>;\n  ctx: CanvasRenderingContext2D | null;\n  onApply?: () => void;\n}\n\nexport const useStrokeApply = ({\n  ref,\n  ctx,\n  onApply,\n}: StrokeApplyProps): (() => void) => {\n  const apply = React.useCallback(() => {\n    if (ctx && ref.current) {\n      if (onApply) {\n        onApply();\n      }\n\n      const context = ref.current.getContext('2d');\n\n      if (context) {\n        context.drawImage(ctx.canvas, 0, 0);\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n      }\n    }\n  }, [ctx, ref, onApply]);\n\n  return apply;\n};\n","import * as React from 'react';\nimport { PointPayload } from '../types';\n\ninterface CanvasDrawProps {\n  ctx: CanvasRenderingContext2D | null;\n  onDraw?: (payload: PointPayload[]) => void;\n}\n\nexport const useCanvasDraw = ({\n  ctx,\n  onDraw,\n}: CanvasDrawProps): ((payload: PointPayload[]) => void) => {\n  const draw = React.useCallback(\n    (payload: PointPayload[]) => {\n      if (onDraw) {\n        onDraw(payload);\n      }\n\n      if (ctx && payload.length) {\n        const { width, height } = ctx.canvas.getBoundingClientRect();\n\n        ctx.lineJoin = 'round';\n        ctx.lineCap = 'round';\n        ctx.strokeStyle = payload[0].color;\n        ctx.fillStyle = payload[0].color;\n        ctx.lineWidth = Math.floor(\n          payload[0].strokeWidth * Math.sqrt(width ** 2 + height ** 2)\n        );\n\n        ctx.clearRect(0, 0, width, height);\n\n        if (payload.length < 3) {\n          ctx.beginPath();\n          ctx.arc(\n            payload[0].x * width,\n            payload[0].y * height,\n            ctx.lineWidth / 2,\n            0,\n            Math.PI * 2\n          );\n          ctx.fill();\n          ctx.closePath();\n\n          return;\n        }\n\n        ctx.beginPath();\n        ctx.moveTo(payload[0].x * width, payload[0].y * height);\n\n        // eslint-disable-next-line no-var\n        for (var i = 1; i < payload.length - 2; i++) {\n          ctx.quadraticCurveTo(\n            payload[i].x * width,\n            payload[i].y * height,\n            ((payload[i].x + payload[i + 1].x) * width) / 2,\n            ((payload[i].y + payload[i + 1].y) * height) / 2\n          );\n        }\n\n        // For the last 2 points\n        ctx.quadraticCurveTo(\n          payload[i].x * width,\n          payload[i].y * height,\n          payload[i + 1].x * width,\n          payload[i + 1].y * height\n        );\n\n        ctx.stroke();\n      }\n    },\n    [ctx, onDraw]\n  );\n\n  return draw;\n};\n","import * as React from 'react';\n\nconst colors = ['#134e6f', '#ff6150', '#1ac0c6'];\n\nexport const Swatches = ({ current, onChange }) => {\n  return (\n    <figure className='control'>\n      <figcaption>Colors</figcaption>\n      <ul>\n        {colors.map((color) => (\n          <li key={color}>\n            <Swatch\n              color={color}\n              onClick={onChange}\n              active={current === color}\n            />\n          </li>\n        ))}\n      </ul>\n    </figure>\n  );\n};\n\nconst Swatch = ({ color, onClick, active }) => {\n  const handleClick = React.useCallback(() => {\n    onClick(color);\n  }, [onClick, color]);\n\n  return (\n    <button\n      className={`swatch-button${active ? ' active' : ''}`}\n      style={{ backgroundColor: color }}\n      onClick={handleClick}\n      aria-label={`Select ${color} color`}\n      title={`Select ${color} color`}\n    />\n  );\n};\n","import * as React from 'react';\n\nconst sizes = [8, 16, 32];\n\nexport const Sizes = ({ current, onChange }) => {\n  return (\n    <figure className='control'>\n      <figcaption>Sizes</figcaption>\n      <ul>\n        {sizes.map((size) => (\n          <li key={size}>\n            <Size size={size} onClick={onChange} active={current === size} />\n          </li>\n        ))}\n      </ul>\n    </figure>\n  );\n};\n\nconst Size = ({ size, onClick, active }) => {\n  const handleClick = React.useCallback(() => {\n    onClick(size);\n  }, [onClick, size]);\n\n  return (\n    <button\n      className={`size-button${active ? ' active' : ''}`}\n      onClick={handleClick}\n      aria-label={`Select  ${size}`}\n      title={`Select size ${size}`}\n    >\n      <div style={{ height: size, width: size }} />\n    </button>\n  );\n};\n","import * as React from 'react';\n\nexport const Footer = () => {\n  return (\n    <footer className='app-footer'>\n      <p>\n        <span role='img' aria-label='rocket emoji'>\n          🚀\n        </span>\n        {'Made by '}\n        <a href='https://www.jsaari.com/' rel='noreferrer noopener'>\n          Jim Saari\n        </a>\n      </p>\n    </footer>\n  );\n};\n","import * as React from 'react';\n\nexport const Header = () => {\n  return (\n    <header className='app-header'>\n      <h1>React Realtime Drawing</h1>\n      <a\n        className=\"app-repository\"\n        href='https://github.com/jsaari97/react-realtime-drawing'\n        title='View project repository'\n        aria-label='View project repository'\n      >\n        <svg\n          aria-hidden={true}\n          xmlns='http://www.w3.org/2000/svg'\n          viewBox='0 0 24 24'\n        >\n          <path d='M12,2.2467A10.00042,10.00042,0,0,0,8.83752,21.73419c.5.08752.6875-.21247.6875-.475,0-.23749-.01251-1.025-.01251-1.86249C7,19.85919,6.35,18.78423,6.15,18.22173A3.636,3.636,0,0,0,5.125,16.8092c-.35-.1875-.85-.65-.01251-.66248A2.00117,2.00117,0,0,1,6.65,17.17169a2.13742,2.13742,0,0,0,2.91248.825A2.10376,2.10376,0,0,1,10.2,16.65923c-2.225-.25-4.55-1.11254-4.55-4.9375a3.89187,3.89187,0,0,1,1.025-2.6875,3.59373,3.59373,0,0,1,.1-2.65s.83747-.26251,2.75,1.025a9.42747,9.42747,0,0,1,5,0c1.91248-1.3,2.75-1.025,2.75-1.025a3.59323,3.59323,0,0,1,.1,2.65,3.869,3.869,0,0,1,1.025,2.6875c0,3.83747-2.33752,4.6875-4.5625,4.9375a2.36814,2.36814,0,0,1,.675,1.85c0,1.33752-.01251,2.41248-.01251,2.75,0,.26251.1875.575.6875.475A10.0053,10.0053,0,0,0,12,2.2467Z' />\n        </svg>\n      </a>\n    </header>\n  );\n};\n","import * as React from 'react';\nimport './main.css';\nimport { useRealtimeDrawer, useRealtimeViewer } from 'react-realtime-drawing';\nimport { Swatches } from './components/swatches';\nimport { Sizes } from './components/sizes';\nimport { Footer } from './components/footer';\nimport { Header } from './components/header';\n\nconst App = () => {\n  const [color, setColor] = React.useState('#134e6f');\n  const [strokeWidth, setStrokeWidth] = React.useState(16);\n\n  const [viewerRef, onChange, { reset: resetViewer }] = useRealtimeViewer();\n\n  const [drawerRef, { reset: resetDrawer, dirty }] = useRealtimeDrawer({\n    color,\n    strokeWidth,\n    onChange,\n  });\n\n  const handleReset = React.useCallback(() => {\n    resetDrawer();\n    resetViewer();\n  }, [resetDrawer, resetViewer]);\n\n  console.log(dirty);\n\n  return (\n    <div className='app-container'>\n      <Header />\n      <main className='container'>\n        <div className='canvas-container'>\n          <div className='canvas'>\n            <canvas ref={drawerRef} />\n            {!dirty && (\n              <span className='canvas-hint'>\n                Start drawing!{' '}\n                <span role='img' aria-label='paintbrush'>\n                  🖌\n                </span>\n              </span>\n            )}\n          </div>\n          <div className='canvas'>\n            <canvas ref={viewerRef} />\n          </div>\n        </div>\n        <div className='controls'>\n          <div>\n            <Swatches current={color} onChange={setColor} />\n          </div>\n          <div>\n            <Sizes current={strokeWidth} onChange={setStrokeWidth} />\n          </div>\n          <div>\n            <button className='reset-button' onClick={handleReset}>\n              Reset\n            </button>\n          </div>\n        </div>\n      </main>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import * as React from 'react';\nimport { PointPayload, RealtimeViewerValue } from '../types';\nimport { useCanvasReset } from '../common/useCanvasReset';\nimport { useStrokeApply } from '../common/useStrokeApply';\nimport { useCanvasDraw } from '../common/useCanvasDraw';\n\nexport const useRealtimeViewer = (): RealtimeViewerValue => {\n  const ref = React.useRef<HTMLCanvasElement>(null);\n  const [ctx, setCtx] = React.useState<CanvasRenderingContext2D | null>(null);\n  const count = React.useRef<number>(0);\n  const [dirty, setDirty] = React.useState<boolean>(false);\n\n  const handleApply = React.useCallback(() => {\n    count.current = 0;\n  }, []);\n\n  const applyStroke = useStrokeApply({ ref, ctx, onApply: handleApply });\n\n  const handleDraw = React.useCallback(\n    (payload: PointPayload[]): void => {\n      if (!dirty) {\n        setDirty(true);\n      }\n\n      if (\n        (payload.length === 1 && count.current === 0) ||\n        payload.length < count.current\n      ) {\n        applyStroke();\n      } else {\n        count.current = payload.length;\n      }\n    },\n    [applyStroke, dirty]\n  );\n\n  const drawToCanvas = useCanvasDraw({ ctx, onDraw: handleDraw });\n\n  const handleReset = React.useCallback(() => {\n    count.current = 0;\n    setDirty(false);\n  }, []);\n\n  const reset = useCanvasReset({ ref, ctx, onReset: handleReset });\n\n  React.useEffect(() => {\n    if (ref.current) {\n      if (ctx) {\n        return;\n      }\n\n      if (!ref.current.parentElement) {\n        console.warn('canvas needs to be inside a parent node');\n        return;\n      }\n\n      // Setup\n      const {\n        width,\n        height,\n      } = ref.current.parentElement.getBoundingClientRect();\n\n      ref.current.parentElement.style.position = 'relative';\n      ref.current.height = height;\n      ref.current.width = width;\n\n      const canvas = document.createElement('canvas');\n      canvas.style.position = 'absolute';\n      canvas.style.left = '0';\n      canvas.style.top = '0';\n      canvas.height = height;\n      canvas.width = width;\n      canvas.style.pointerEvents = 'none';\n      ref.current.parentElement.insertAdjacentElement('beforeend', canvas);\n      setCtx(canvas.getContext('2d'));\n    }\n  }, [ref, ctx]);\n\n  return [ref, drawToCanvas, { reset, dirty }];\n};\n","import * as React from 'react';\nimport {\n  RealtimeDrawerOptions,\n  RealtimeDrawerValue,\n  PointPayload,\n} from '../types';\nimport { useCanvasReset } from '../common/useCanvasReset';\nimport { useStrokeApply } from '../common/useStrokeApply';\nimport { useCanvasDraw } from '../common/useCanvasDraw';\n\nexport const useRealtimeDrawer = ({\n  strokeWidth = 16,\n  color = '#000',\n  onChange,\n}: RealtimeDrawerOptions = {}): RealtimeDrawerValue => {\n  const ref = React.useRef<HTMLCanvasElement>(null);\n  const [ctx, setCtx] = React.useState<CanvasRenderingContext2D | null>(null);\n  const count = React.useRef<number>(0);\n  const points = React.useRef<PointPayload[]>([]);\n  const [ratio, setRatio] = React.useState<number>(0);\n  const [dirty, setDirty] = React.useState<boolean>(false);\n\n  const [mouseDown, setMouseDown] = React.useState<boolean>(false);\n\n  const handleApply = React.useCallback(() => {\n    setMouseDown(false);\n\n    if (ref.current && ctx) {\n      ref.current.onmousemove = null;\n      ref.current.ontouchmove = null;\n\n      points.current = [];\n      count.current = 0;\n    }\n  }, [ref, ctx]);\n\n  const applyStroke = useStrokeApply({ ref, ctx, onApply: handleApply });\n\n  const drawToCanvas = useCanvasDraw({ ctx });\n\n  const handleDraw = React.useCallback(\n    (e: TouchEvent | MouseEvent) => {\n      if (ref.current) {\n        // increment frame count\n        count.current++;\n\n        if (count.current % 1 === 0 || count.current < 2) {\n          const {\n            width,\n            height,\n            left,\n            top,\n          } = ref.current.getBoundingClientRect();\n\n          // Get cursor coordinates from mouse or touch event\n          const pageX =\n            e instanceof MouseEvent ? e.pageX : e.changedTouches[0].pageX;\n          const pageY =\n            e instanceof MouseEvent ? e.pageY : e.changedTouches[0].pageY;\n\n          const payload: PointPayload = {\n            x: Math.floor(pageX - left - window.pageXOffset) / width,\n            y: Math.floor(pageY - top - window.pageYOffset) / height,\n            color,\n            strokeWidth: strokeWidth / Math.sqrt(width ** 2 + height ** 2),\n            ratio,\n          };\n\n          points.current.push(payload);\n\n          if (!dirty) {\n            setDirty(true);\n          }\n\n          if (onChange) {\n            onChange(points.current);\n          }\n\n          drawToCanvas(points.current);\n        }\n      }\n    },\n    [ref, drawToCanvas, color, strokeWidth, onChange, ratio, dirty]\n  );\n\n  React.useEffect(() => {\n    if (ref.current) {\n      if (ctx) {\n        return;\n      }\n\n      if (!ref.current.parentElement) {\n        console.warn('canvas needs to be inside a parent node');\n        return;\n      }\n\n      // Setup\n      const {\n        width,\n        height,\n      } = ref.current.parentElement.getBoundingClientRect();\n\n      ref.current.parentElement.style.position = 'relative';\n      ref.current.height = height;\n      ref.current.width = width;\n      ref.current.style.touchAction = 'none';\n\n      setRatio(width / height);\n\n      const canvas = document.createElement('canvas');\n      canvas.style.position = 'absolute';\n      canvas.style.left = '0';\n      canvas.style.top = '0';\n      canvas.height = height;\n      canvas.width = width;\n      canvas.style.pointerEvents = 'none';\n      ref.current.parentElement.insertAdjacentElement('beforeend', canvas);\n      setCtx(canvas.getContext('2d'));\n    }\n  }, [ref, ctx]);\n\n  React.useEffect(() => {\n    if (ref.current) {\n      const start = (e: MouseEvent | TouchEvent) => {\n        setMouseDown(true);\n        handleDraw(e);\n      };\n\n      // attach events\n      if ('ontouchstart' in window) {\n        ref.current.ontouchstart = start;\n        ref.current.ontouchend = applyStroke;\n        ref.current.ontouchcancel = applyStroke;\n      } else {\n        ref.current.onmousedown = start;\n        ref.current.onmouseleave = applyStroke;\n        ref.current.onmouseup = applyStroke;\n      }\n    }\n  }, [ref, drawToCanvas, applyStroke, handleDraw]);\n\n  React.useEffect(() => {\n    if (mouseDown && ref.current) {\n      if ('ontouchstart' in window) {\n        ref.current.ontouchmove = handleDraw;\n      } else {\n        ref.current.onmousemove = handleDraw;\n      }\n    }\n  }, [mouseDown, ref.current, ctx]);\n\n  const handleReset = React.useCallback(() => {\n    count.current = 0;\n    points.current = [];\n    setDirty(false);\n  }, []);\n\n  const reset = useCanvasReset({ ref, ctx, onReset: handleReset });\n\n  return [ref, { reset, dirty }];\n};\n","import './index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './main';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}